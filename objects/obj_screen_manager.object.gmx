<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// properly manage screen modes

var _col1=false;
var _col2=false;
var _row1=false;
var _row2=false;

// figure out how many quad rows and cols
// Future opportunity for simplication!

if (global.player[0].visible || global.player[2].visible) //first column visible
    _col1=true;

if (global.player[1].visible || global.player[3].visible) //second column visible
    _col2=true;
   
if (global.player[0].visible || global.player[1].visible) //first row visible
    _row1=true;

if (global.player[2].visible || global.player[3].visible) //second column visible
    _row2=true;
        
if (_col1 &amp;&amp; _col2)
    global.quadcols = 2;
else
    global.quadcols = 1;

if (_row1 &amp;&amp; _row2)
    global.quadrows = 2;
else
    global.quadrows = 1;


if (global.screenmode_changed)
{
    switch (global.screenmode)
    {
        case screen.single:
            view_visible[view.single] = true;
            view_visible[view.quad1] = false;
            view_visible[view.quad2] = false;
            break;
        case screen.dual:
            view_visible[view.single] = false;
            view_visible[view.quad1] = true;
            view_visible[view.quad2] = true;
            break;
        case screen.quad:
            view_visible[view.single] = false;
            view_visible[view.quad1] = true;
            view_visible[view.quad2] = true;
            break;      
    }
    global.screenmode_changed = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw GUI stuff for split screen modes
if (global.screenmode == screen.dual)
{
    draw_set_color(c_black);
    draw_line_width(display_get_gui_width()/2, 0, display_get_gui_width()/2, display_get_gui_height(), 8); 
}

if (global.screenmode == screen.quad)
{
    draw_set_color(c_black);
    draw_line_width(display_get_gui_width()/2, 0, display_get_gui_width()/2, display_get_gui_height(), 8); 
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
